package com.evento.apirest.resources;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.evento.apirest.models.Evento;
import com.evento.apirest.repository.EventoRepository;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@CrossOrigin(origins = "*")
@RestController
@RequestMapping(value="/api")
@Api(value="API REST Evento")
public class ProdutoResource {
	
	@Autowired
	EventoRepository eventoRepository;
	
	@ApiOperation(value="Retorna uma lista de Eventos")
	@GetMapping("/eventos")
	public List<Evento> listaEventos(){
		return eventoRepository.findAll();
	}
	
	
	@GetMapping("/mensagem")
	public String mensagem(){
		return "API RESPONDENDO";
	}
	
	@ApiOperation(value="Retorna um evento unico")
	@GetMapping("/evento/{id}")
	public Evento listaEventoUnico(@PathVariable(value="id") long id){
		return eventoRepository.findById(id);
	}
	
	@ApiOperation(value="Salva um produto")
	@PostMapping("/produto")
	public Evento salvaEvento(@RequestBody @Valid Evento evento) {
		return eventoRepository.save(evento);
	}
	
	@ApiOperation(value="Deleta um produto")
	@DeleteMapping("/produto")
	public void deletaEvento(@RequestBody @Valid Evento evento) {
		eventoRepository.delete(evento);
	}
	
	@ApiOperation(value="Atualiza um produto")
	@PutMapping("/produto")
	public Evento atualizaEvento(@RequestBody @Valid Evento evento) {
		return eventoRepository.save(evento);
	}
	 

}
